{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"baseName": {
			"type": "string",
			"metadata": {
				"description": "Used to create unique resource name"
			}
		},
		"location": {
			"type": "string",
			"metadata": {
				"description": "The location where the Virtual Machine will be deployed."
			},
			"allowedValues": [
				"West US",
				"East US",
				"Southeast Asia",
				"East Asia",
				"West Europe"
			]
		},
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "Username for the Virtual Machine."
			}
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "Password for the Virtual Machine."
			}
		},
		"vmSize": {
			"type": "string",
			"defaultValue": "Standard_A0"
		},
		"virtualNetworkRef": {
			"type": "string"
		},
		"ubuntuOSVersion": {
			"type": "string",
			"defaultValue": "15.10",
			"metadata": {
				"description": "The Ubuntu version for deploying the Docker containers. This will pick a fully patched image of this given Ubuntu version. Allowed values: 14.04.2-LTS, 14.04-DAILY, 15.10"
			},
			"allowedValues": [
				"14.04.2-LTS",
				"14.04-DAILY",
				"15.10"
			]
		}
	},
	"variables": {
		"apiversion": "2015-06-15",
		"imagePublisher": "Canonical",
		"imageOffer": "UbuntuServer",
		"OSDiskName": "osdiskfordockersimple",
		"extensionName": "DockerExtension",
		"vmName": "[concat(parameters('baseName'),'graphite-vm')]",
		"publicIPAddressType": "Dynamic",
		"publicIPAddressName": "[concat(parameters('baseName'),'graphite-pip')]",
		"dnsNameForPublicIP": "[concat(parameters('baseName'),'graphite-dns')]",
		"nicName": "[concat(parameters('baseName'),'graphite-nic')]",
		"newStorageAccountName": "[concat(parameters('baseName'),'graphitestg')]",
		"securityGroupName": "[concat(parameters('baseName'),'graphitesecgrp')]",
		"vmStorageAccountContainerName": "vhds",
		"storageAccountType": "Standard_LRS",
		"vnetID": "[parameters('virtualNetworkRef')]",
		"subnetRef": "[concat(variables('vnetID'),'/subnets/','Subnet-3')]"
	},
	"resources": [
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('newStorageAccountName')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"properties": {
				"accountType": "[variables('storageAccountType')]"
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('publicIPAddressName')]",
			"location": "[parameters('location')]",
			"properties": {
				"publicIPAllocationMethod": "[variables('publicIPAddressType')]",
				"dnsSettings": {
					"domainNameLabel": "[variables('dnsNameForPublicIP')]"
				}
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[variables('securityGroupName')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
					{
						"name": "allow-ssh-in",
						"properties": {
							"description": "Allows SSH traffic",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "22",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 100,
							"direction": "Inbound"
						}
					},
					{
						"name": "allow-graphite",
						"properties": {
							"description": "Allows Graphite traffic",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "80",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 200,
							"direction": "Inbound"
						}
					},
					{
						"name": "allow-statsd",
						"properties": {
							"description": "Allows Graphite traffic",
							"protocol": "Udp",
							"sourcePortRange": "*",
							"destinationPortRange": "8125",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 300,
							"direction": "Inbound"
						}
					}
				]
			}
		},
		{
			"apiVersion": "2015-06-15",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[variables('nicName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
							},
							"subnet": {
								"id": "[variables('subnetRef')]"
							}
						}
					}
				],
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
				}
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[variables('vmName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"osProfile": {
					"computerName": "[variables('vmName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('imagePublisher')]",
						"offer": "[variables('imageOffer')]",
						"sku": "[parameters('ubuntuOSVersion')]",
						"version": "latest"
					},
					"osDisk": {
						"name": "osdisk1",
						"vhd": {
							"uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
						}
					]
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmName'),'/', variables('extensionName'))]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
			],
			"properties": {
				"publisher": "Microsoft.Azure.Extensions",
				"type": "DockerExtension",
				"typeHandlerVersion": "1.0",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"compose": {
						"graphitestatsd": {
							"image": "hopsoft/graphite-statsd",
							"ports": [
								"8080:80"
							],
							"expose": [
								"80",
								"8125/udp"
							]
						}
					}
				}
			}
		}
	]
}